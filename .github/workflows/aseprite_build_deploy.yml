name: Build and deploy Aseprite

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'
  push:
    branches:
      - master
      - fix

env:
  BUILD_TYPE: Release

jobs:
  check-version:
    name: Check latest Aseprite version
    runs-on: ubuntu-latest
    outputs:
      download_url: ${{ steps.version_info.outputs.download_url }}
      version: ${{ steps.version_info.outputs.version }}
      version_info: ${{ steps.version_info.outputs.version_info }}
      should_build: ${{ steps.should_build.outputs.should_build }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Check update
      id: version_info
      run: |
        data=$(curl -sL https://api.github.com/repos/aseprite/aseprite/releases/latest)
        LATEST_TAG=$(echo "${data}" | jq -r '.tag_name')
        DOWNLOAD_URL=$(echo "${data}" | jq -r '.assets[].browser_download_url')
        VERSION_INFO=$(echo "${data}" | jq -r '.body')

        echo "${LATEST_TAG}" > ${LATEST_TAG}.txt
        echo "version=${LATEST_TAG}" >> $GITHUB_OUTPUT
        echo "download_url=${DOWNLOAD_URL}" >> $GITHUB_OUTPUT
        echo "version_info<<EOF" >> $GITHUB_OUTPUT
        echo "$VERSION_INFO" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
    - name: Check version cache
      id: version_check
      uses: actions/cache@v4.2.2
      with:
        path: ${{ steps.version_info.outputs.version }}.txt
        key: cached_version
    - name: Check build condition
      id: should_build
      if: github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/fix' || steps.version_check.outputs.cache-hit != 'true'
      run: echo "should_build=true" >> $GITHUB_OUTPUT

  build-aseprite:
    name: Build Aseprite
    needs: check-version
    if: ${{ needs.check-version.outputs.should_build }}
    runs-on: ${{ matrix.os }}
    strategy:
       matrix:
         os: [windows-latest]
       fail-fast: false
    steps:
      - name: Setup ninja
        uses: seanmiddleditch/gha-setup-ninja@v6
        
      - name: Remove OpenSLL
        shell: powershell
        run: Remove-Item -Recurse -Force "C:\Program Files\OpenSSL\"
        
      - name: Check skia cache
        id: skia-cache
        uses: actions/cache@v4.2.2
        with:
          path: skia
          key: skia-${{ matrix.os }}-cache
        
      - name: Download Skia if not hit
        if: steps.skia-cache.outputs.cache-hit != 'true'
        run: |
          curl -o Skia-Windows-Release-X64.zip -L https://github.com/aseprite/skia/releases/download/m124-08a5439a6b/Skia-Windows-Release-x64.zip
          unzip Skia-Windows-Release-X64.zip -d skia
        
      - name: Download latest Aseprite
        run: |
          curl -o Aseprite-source.zip -L ${{ needs.check-version.outputs.download_url }}
          unzip Aseprite-source.zip -d aseprite
          mkdir -p aseprite/build
        
      - name: Set architecture for the produced binary
        shell: cmd
        run: call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat" -arch=x64
        
      - name: Set VS dev env
        uses: seanmiddleditch/gha-setup-vsdevenv@v5
        
      - name: CMake
        working-directory: aseprite/build
        shell: cmd
        run: cmake -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DCMAKE_IGNORE_PATH='C:/ProgramData/chocolatey/bin/;C:/Strawberry/c/bin/' -DLAF_BACKEND=skia -DSKIA_DIR=../../skia -DSKIA_LIBRARY_DIR=../../skia/out/Release-x64 -DSKIA_LIBRARY=../../skia/out/Release-x64/skia.lib -G Ninja ..
        
      - name: Ninja
        working-directory: aseprite/build
        run: ninja aseprite
        
      - name: Clean up
        working-directory: aseprite/build/bin
        shell: bash
        run: rm -f gen modp_b64_gen gen.exe gen.exe.manifest modp_b64_gen.exe modp_b64_gen.exe.manifest
        
      - name: Pack & zip
        working-directory: aseprite/build/bin
        run: |
          echo '# This file is here so Aseprite behaves as a portable program' > aseprite.ini
          7z -tzip a Aseprite-${{ needs.check-version.outputs.version }}-${{ runner.os }}.zip *
        
      - name: Release
        uses: ncipollo/release-action@v1.16.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.check-version.outputs.version }}
          release_name: ${{ needs.check-version.outputs.version }}
          body: ${{ needs.check-version.outputs.version_info }}
          draft: true
          artifacts: aseprite/build/bin/Aseprite-${{ needs.check-version.outputs.version }}-${{ runner.os }}.zip
          artifactContentType: application/zip
